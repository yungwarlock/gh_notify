name: Build and Release

on:
  push:
  release:
    types: [created]

permissions:
  contents: write


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        BINARY_NAME="gh_notify-$GOOS-$GOARCH"
        if [ "$GOOS" = "linux" ]; then
          go build -tags nodbus -o "dist/${BINARY_NAME}"
        elif [ "$GOOS" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
          go build -ldflags -H=windowsgui -o "dist/${BINARY_NAME}"
        elif [ "$GOOS" = "darwin" ]; then
          CGO_ENABLED=1 go build -o "dist/${BINARY_NAME}"
        fi
        ls -la dist/
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/gh_notify-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
